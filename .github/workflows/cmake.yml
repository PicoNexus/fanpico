name: Firmware Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  PICO_SDK_REF: f396d05f8252d4670d4ea05c8b7ac938ef0cd381

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pico_board: ["pico", "pico_w"]
        fanpico_board: ["0804", "0804D"]
    steps:
    - uses: carlosperate/arm-none-eabi-gcc-action@v1
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
        submodules: true
    
    - name: Cache Pico-SDK
      id: cache-pico-sdk
      uses: actions/cache@v3
      with:
        path: pico-sdk
        key: ${{runner.os}}-pico-sdk-${{env.PICO_SDK_REF}}
    
    - if: ${{steps.cache-pico-sdk.outputs.cache-hit != 'true' }}
      name: Checkout Pico-SDK
      uses: actions/checkout@v3
      with:
        repository: raspberrypi/pico-sdk
        ref: ${{env.PICO_SDK_REF}}
        path: pico-sdk
        submodules: true
        
    - name: Set PICO_SDK_PATH
      run: |
        echo "PICO_SDK_PATH=${{github.workspace}}/pico-sdk" >> $GITHUB_ENV

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S main -B ${{github.workspace}}/main/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPICO_BOARD=${{matrix.pico_board}} -DFANPICO_BOARD=${{matrix.fanpico_board}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/main/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/main/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ls -l fanpico.*
        sha256sum fanpico.uf2

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: fanpico-firmware-${{matrix.fanpico_board}}-${{matrix.pico_board}}
        path: |
          main/build/fanpico.uf2
          main/build/fanpico.elf
          main/build/fanpico.elf.map
          
